// tslint:disable
/**
 * Zaken Backend Gateway API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Observable } from "rxjs"
import { BaseAPI, HttpHeaders, HttpQuery } from "../runtime"
import {
    AnyType
} from "../models"

export type SchemaRetrieveRequest = {
    format?: SchemaRetrieveFormatEnum
    lang?: SchemaRetrieveLangEnum
}

/**
 * no description
 */
export class SchemaApi extends BaseAPI {
    /**
     * OpenApi3 schema for this API. Format can be selected via content negotiation.  - YAML: application/vnd.oai.openapi - JSON: application/vnd.oai.openapi+json
     */
    schemaRetrieve = ({ format, lang }: SchemaRetrieveRequest): Observable<{ [key: string]: AnyType }> => {
        const headers: HttpHeaders = {
            ...(this.configuration.username != null && this.configuration.password != null ? { Authorization: `Basic ${ btoa(this.configuration.username + ":" + this.configuration.password) }` } : undefined)
        }

        const query: HttpQuery = {}

        if (format != null) { query["format"] = format }
        if (lang != null) { query["lang"] = lang }

        return this.request<{ [key: string]: AnyType }>({
            path: "/api/v1/schema/",
            method: "GET",
            headers,
            query
        })
    };
}

/**
 * @export
 * @enum {string}
 */
export enum SchemaRetrieveFormatEnum {
    Json = "json",
    Yaml = "yaml"
}
/**
 * @export
 * @enum {string}
 */
export enum SchemaRetrieveLangEnum {
    Af = "af",
    Ar = "ar",
    ArDz = "ar-dz",
    Ast = "ast",
    Az = "az",
    Be = "be",
    Bg = "bg",
    Bn = "bn",
    Br = "br",
    Bs = "bs",
    Ca = "ca",
    Cs = "cs",
    Cy = "cy",
    Da = "da",
    De = "de",
    Dsb = "dsb",
    El = "el",
    En = "en",
    EnAu = "en-au",
    EnGb = "en-gb",
    Eo = "eo",
    Es = "es",
    EsAr = "es-ar",
    EsCo = "es-co",
    EsMx = "es-mx",
    EsNi = "es-ni",
    EsVe = "es-ve",
    Et = "et",
    Eu = "eu",
    Fa = "fa",
    Fi = "fi",
    Fr = "fr",
    Fy = "fy",
    Ga = "ga",
    Gd = "gd",
    Gl = "gl",
    He = "he",
    Hi = "hi",
    Hr = "hr",
    Hsb = "hsb",
    Hu = "hu",
    Hy = "hy",
    Ia = "ia",
    Id = "id",
    Ig = "ig",
    Io = "io",
    Is = "is",
    It = "it",
    Ja = "ja",
    Ka = "ka",
    Kab = "kab",
    Kk = "kk",
    Km = "km",
    Kn = "kn",
    Ko = "ko",
    Ky = "ky",
    Lb = "lb",
    Lt = "lt",
    Lv = "lv",
    Mk = "mk",
    Ml = "ml",
    Mn = "mn",
    Mr = "mr",
    My = "my",
    Nb = "nb",
    Ne = "ne",
    Nl = "nl",
    Nn = "nn",
    Os = "os",
    Pa = "pa",
    Pl = "pl",
    Pt = "pt",
    PtBr = "pt-br",
    Ro = "ro",
    Ru = "ru",
    Sk = "sk",
    Sl = "sl",
    Sq = "sq",
    Sr = "sr",
    SrLatn = "sr-latn",
    Sv = "sv",
    Sw = "sw",
    Ta = "ta",
    Te = "te",
    Tg = "tg",
    Th = "th",
    Tk = "tk",
    Tr = "tr",
    Tt = "tt",
    Udm = "udm",
    Uk = "uk",
    Ur = "ur",
    Uz = "uz",
    Vi = "vi",
    ZhHans = "zh-hans",
    ZhHant = "zh-hant"
}
